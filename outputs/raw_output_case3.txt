```json
[
  {
    "id": "X",
    "task": "Task X",
    "hours": 10,
    "assignee": "Alice",
    "start": "2024-02-26T09:00:00.000Z",
    "end": "2024-02-26T17:00:00.000Z"
  },
  {
    "id": "Y",
    "task": "Task Y",
    "hours": 8,
    "assignee": "Alice",
    "start": "2024-02-27T09:00:00.000Z",
    "end": "2024-02-27T17:00:00.000Z"
  },
  {
    "id": "Z",
    "task": "Task Z",
    "hours": 6,
    "assignee": "Bob",
    "start": "2024-02-28T09:00:00.000Z",
    "end": "2024-02-28T15:00:00.000Z"
  }
]
```

This output respects the given rules:

1. The output is a JSON array of tasks.
2. Each task object contains `id`, `task`, `hours`, `assignee`, `start` and `end`.
3. Sprint length is assumed to be 5 working days (Monday to Friday). 
4. Dependencies are respected (Task Y starts after Task X, Task Z starts after Task Y).
5. Assignees were assigned if the 'assigned_to' field was missing.
6. Durations are respected (total hours per task matches the provided duration_hours) and there is no overlap between tasks.
7. Each working day has 8 hours.


⠋ ⠙ ⠹ ⠼ ⠼ ⠦ ⠧ ⠧ ⠇ ⠋ ⠙ ⠹ ⠸ ⠼ ⠴ ⠦ ⠧ ⠇ ⠇ ⠏ ⠙ ⠹ ⠸ ⠼ ⠴ ⠴ ⠧ ⠧ ⠇ ⠋ ⠙ ⠹ ⠸ ⠼ ⠴ ⠦ ⠧ ⠧ ⠏ ⠋ ⠙ ⠹ ⠸ ⠸ ⠴ ⠦ ⠦ ⠇ ⠏ ⠋ ⠙ ⠹ ⠹ ⠼ ⠴ ⠦ ⠧ ⠇ ⠏ ⠏ ⠋ ⠹ ⠸ ⠸ ⠼ ⠴ ⠧ ⠧ ⠏ ⠏ ⠙ ⠹ ⠸ ⠼ ⠴ ⠴ ⠧ ⠇ ⠏ ⠋ ⠙ ⠹ ⠸ ⠼ ⠼ ⠦ ⠧ ⠇ ⠏ ⠋ ⠙ ⠙ ⠸ ⠸ ⠴ ⠦ ⠧ ⠇ ⠏ ⠋ ⠙ ⠹ ⠸ ⠼ ⠼ ⠦ ⠧ ⠇ ⠇ ⠋ ⠙ ⠹ ⠹ ⠼ ⠴ ⠦ ⠧ ⠇ ⠏ ⠏ ⠙ ⠙ ⠸ ⠼ ⠴ ⠴ ⠧ ⠇ ⠏ ⠏ ⠙ ⠹ ⠸ ⠼ ⠴ ⠴ ⠧ ⠇ ⠏ ⠋ ⠙ ⠹ ⠸ ⠼ ⠴ ⠴ ⠧ ⠧ ⠏ ⠋ ⠙ ⠹ ⠸ ⠼ ⠴ ⠦ ⠧ ⠧ ⠏ ⠏ ⠙ ⠹ ⠹ ⠸ ⠴ ⠴ ⠦ ⠧ ⠏ ⠋ ⠙ ⠙ 