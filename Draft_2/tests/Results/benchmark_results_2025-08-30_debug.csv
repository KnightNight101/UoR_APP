input,valid_plan,task,output,similarity,accuracy,expected
"--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",0.169,,perf: secure password check
"--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)",0.189,,fix: change logging level
"--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",0.198,,docs: disable debug mode
"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.141,,style: clean data before returning
"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.153,,test: clean data before returning
"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.106,,perf: update greeting
"--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",0.187,,refactor: secure password check
"--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",0.137,,perf: improve formatting
"--- a/file.py
+++ b/file.py
- result = []
+ result = {}",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- result = []
+ result = {}",0.18,,style: switch result container
"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.083,,fix: update greeting
"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.131,,docs: clean data before returning
"--- a/file.py
+++ b/file.py
- result = []
+ result = {}",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- result = []
+ result = {}",0.18,,style: switch result container
"--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",0.169,,perf: secure password check
"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.083,,fix: update greeting
"--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",0.137,,perf: improve formatting
"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.171,,refactor: clean data before returning
"--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",0.133,,refactor: improve formatting
"--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",0.161,,fix: disable debug mode
"--- a/file.py
+++ b/file.py
- list()
+ set()",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- list()
+ set()",0.205,,style: optimize data structure
"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.14,,style: update greeting
"--- a/file.py
+++ b/file.py
- result = []
+ result = {}",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- result = []
+ result = {}",0.212,,refactor: switch result container
"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.151,,docs: add status response
"--- a/file.py
+++ b/file.py
- list()
+ set()",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- list()
+ set()",0.181,,perf: optimize data structure
"--- a/file.py
+++ b/file.py
- list()
+ set()",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- list()
+ set()",0.189,,refactor: optimize data structure
"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.151,,docs: add status response
"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.162,,style: add status response
"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.148,,refactor: add status response
"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.115,,refactor: update greeting
"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.171,,refactor: clean data before returning
"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,commit_summary,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.15,,chore: add status response
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 1}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 1, ""urgency"": 1}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 1}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 1, ""urgency"": 1}]",,0.5,"{""Do First"": [], ""Schedule"": [], ""Delegate"": [3, 4], ""Eliminate"": [1, 2, 5]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 1}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 1}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]",,0.5,"{""Do First"": [], ""Schedule"": [1], ""Delegate"": [2, 3], ""Eliminate"": []}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 3, ""urgency"": 5}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 3, ""urgency"": 5}]",,0.0,"{""Do First"": [1], ""Schedule"": [2], ""Delegate"": [3, 5], ""Eliminate"": [4]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 4}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 4}]",,0.5,"{""Do First"": [1, 3], ""Schedule"": [], ""Delegate"": [], ""Eliminate"": [2]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 3}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 3}]",,0.25,"{""Do First"": [], ""Schedule"": [3, 5], ""Delegate"": [1, 4], ""Eliminate"": [2]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}]",,0.0,"{""Do First"": [2], ""Schedule"": [1], ""Delegate"": [3], ""Eliminate"": [4]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 2}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 2}]",,0.25,"{""Do First"": [1], ""Schedule"": [], ""Delegate"": [3], ""Eliminate"": [2, 4]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 1}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 1}]",,0.5,"{""Do First"": [], ""Schedule"": [], ""Delegate"": [2], ""Eliminate"": [1, 3]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 3}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 3}]",,0.25,"{""Do First"": [2], ""Schedule"": [3], ""Delegate"": [1], ""Eliminate"": []}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 1}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 1}]",,0.5,"{""Do First"": [1], ""Schedule"": [2, 3], ""Delegate"": [], ""Eliminate"": []}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 5}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 5}]",,0.25,"{""Do First"": [5], ""Schedule"": [], ""Delegate"": [2, 3], ""Eliminate"": [1, 4]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 4}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 4}]",,0.5,"{""Do First"": [2], ""Schedule"": [], ""Delegate"": [1, 3], ""Eliminate"": []}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 5, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 4, ""urgency"": 1}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 5, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 4, ""urgency"": 1}]",,0.25,"{""Do First"": [], ""Schedule"": [4, 5], ""Delegate"": [1], ""Eliminate"": [2, 3]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 5}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 5}]",,0.5,"{""Do First"": [], ""Schedule"": [], ""Delegate"": [1, 4], ""Eliminate"": [2, 3]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]",,0.25,"{""Do First"": [], ""Schedule"": [1], ""Delegate"": [3], ""Eliminate"": [2]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}]",,0.75,"{""Do First"": [], ""Schedule"": [], ""Delegate"": [1, 2, 3], ""Eliminate"": []}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 1}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 1}]",,0.25,"{""Do First"": [], ""Schedule"": [2, 3], ""Delegate"": [1], ""Eliminate"": [4]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 3}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 3}]",,0.75,"{""Do First"": [], ""Schedule"": [], ""Delegate"": [], ""Eliminate"": [1, 2, 3]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 4, ""urgency"": 5}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 4, ""urgency"": 5}]",,0.25,"{""Do First"": [4], ""Schedule"": [1, 3], ""Delegate"": [], ""Eliminate"": [2]}"
"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 5}]",,eisenhower,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 5}]",,0.25,"{""Do First"": [], ""Schedule"": [1], ""Delegate"": [4], ""Eliminate"": [2, 3]}"
"team={""Member1"": {""available_hours"": 23}, ""Member2"": {""available_hours"": 22}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 19}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": []}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 23}, ""Member2"": {""available_hours"": 22}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 19}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": []}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 15}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 18}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": [2, 3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 10, ""dependencies"": [5]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 15}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 18}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": [2, 3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 10, ""dependencies"": [5]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 21}, ""Member4"": {""available_hours"": 21}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [2, 3]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 7, ""dependencies"": [4]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 21}, ""Member4"": {""available_hours"": 21}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [2, 3]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 7, ""dependencies"": [4]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 21}, ""Member4"": {""available_hours"": 10}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 5, ""dependencies"": [5, 4]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 21}, ""Member4"": {""available_hours"": 10}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 5, ""dependencies"": [5, 4]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 25}, ""Member2"": {""available_hours"": 23}, ""Member3"": {""available_hours"": 20}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": [1]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 25}, ""Member2"": {""available_hours"": 23}, ""Member3"": {""available_hours"": 20}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": [1]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 4, ""dependencies"": [2]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 4, ""dependencies"": [2]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 25}, ""Member4"": {""available_hours"": 22}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 9, ""dependencies"": []}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 25}, ""Member4"": {""available_hours"": 22}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 9, ""dependencies"": []}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 17}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 24}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [1, 4]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 6, ""dependencies"": [4]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 17}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 24}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [1, 4]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 6, ""dependencies"": [4]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 10}, ""Member2"": {""available_hours"": 11}, ""Member3"": {""available_hours"": 12}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 5, ""dependencies"": [1, 3]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 9, ""dependencies"": [1]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 10}, ""Member2"": {""available_hours"": 11}, ""Member3"": {""available_hours"": 12}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 5, ""dependencies"": [1, 3]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 9, ""dependencies"": [1]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 14}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 10, ""dependencies"": [1]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 14}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 10, ""dependencies"": [1]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 20}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 25}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": []}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 20}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 25}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": []}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 14}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 5, ""dependencies"": [1, 2]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 14}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 5, ""dependencies"": [1, 2]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 21}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 6, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [1]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 21}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 6, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [1]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 11}, ""Member2"": {""available_hours"": 18}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": [2, 1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": [2, 3]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 11}, ""Member2"": {""available_hours"": 18}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": [2, 1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": [2, 3]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 12}, ""Member2"": {""available_hours"": 12}, ""Member3"": {""available_hours"": 17}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 4, ""dependencies"": [3, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": [5]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 12}, ""Member2"": {""available_hours"": 12}, ""Member3"": {""available_hours"": 17}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 4, ""dependencies"": [3, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": [5]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 15}, ""Member2"": {""available_hours"": 17}, ""Member3"": {""available_hours"": 22}, ""Member4"": {""available_hours"": 18}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 6, ""dependencies"": [4, 2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 3, ""dependencies"": [4, 2]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 15}, ""Member2"": {""available_hours"": 17}, ""Member3"": {""available_hours"": 22}, ""Member4"": {""available_hours"": 18}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 6, ""dependencies"": [4, 2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 3, ""dependencies"": [4, 2]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 13}, ""Member2"": {""available_hours"": 21}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 16}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": []}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 13}, ""Member2"": {""available_hours"": 21}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 16}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": []}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 24}, ""Member2"": {""available_hours"": 15}, ""Member3"": {""available_hours"": 15}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [3]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 24}, ""Member2"": {""available_hours"": 15}, ""Member3"": {""available_hours"": 15}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [3]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 10}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [2]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 10}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [2]}]
",,,Valid sprint plan respecting constraints
"team={""Member1"": {""available_hours"": 23}, ""Member2"": {""available_hours"": 19}, ""Member3"": {""available_hours"": 14}, ""Member4"": {""available_hours"": 14}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": [2, 1]}]",1,sprint_planning,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 23}, ""Member2"": {""available_hours"": 19}, ""Member3"": {""available_hours"": 14}, ""Member4"": {""available_hours"": 14}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": [2, 1]}]
",,,Valid sprint plan respecting constraints
