expected,timestamp,task,test_case,precision,input,valid_plan,output,time_taken_sec,model,accuracy,similarity
perf: secure password check,2025-08-31 14:08:09,commit_summary,case_1,,"--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",0.0,TinyLlama,,0.169
fix: change logging level,2025-08-31 14:08:09,commit_summary,case_2,,"--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)",0.0,TinyLlama,,0.189
docs: disable debug mode,2025-08-31 14:08:09,commit_summary,case_3,,"--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",0.0,TinyLlama,,0.198
style: clean data before returning,2025-08-31 14:08:09,commit_summary,case_4,,"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.0,TinyLlama,,0.141
test: clean data before returning,2025-08-31 14:08:09,commit_summary,case_5,,"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.0,TinyLlama,,0.153
perf: update greeting,2025-08-31 14:08:09,commit_summary,case_6,,"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.0,TinyLlama,,0.106
refactor: secure password check,2025-08-31 14:08:09,commit_summary,case_7,,"--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",0.0,TinyLlama,,0.187
perf: improve formatting,2025-08-31 14:08:09,commit_summary,case_8,,"--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",0.0,TinyLlama,,0.137
style: switch result container,2025-08-31 14:08:09,commit_summary,case_9,,"--- a/file.py
+++ b/file.py
- result = []
+ result = {}",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- result = []
+ result = {}",0.0,TinyLlama,,0.18
fix: update greeting,2025-08-31 14:08:09,commit_summary,case_10,,"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.0,TinyLlama,,0.083
docs: clean data before returning,2025-08-31 14:08:09,commit_summary,case_11,,"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.0,TinyLlama,,0.131
style: switch result container,2025-08-31 14:08:09,commit_summary,case_12,,"--- a/file.py
+++ b/file.py
- result = []
+ result = {}",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- result = []
+ result = {}",0.0,TinyLlama,,0.18
perf: secure password check,2025-08-31 14:08:09,commit_summary,case_13,,"--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",0.0,TinyLlama,,0.169
fix: update greeting,2025-08-31 14:08:09,commit_summary,case_14,,"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.0,TinyLlama,,0.083
perf: improve formatting,2025-08-31 14:08:09,commit_summary,case_15,,"--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",0.0,TinyLlama,,0.137
refactor: clean data before returning,2025-08-31 14:08:09,commit_summary,case_16,,"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.0,TinyLlama,,0.171
refactor: improve formatting,2025-08-31 14:08:09,commit_summary,case_17,,"--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",0.0,TinyLlama,,0.133
fix: disable debug mode,2025-08-31 14:08:09,commit_summary,case_18,,"--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",0.0,TinyLlama,,0.161
style: optimize data structure,2025-08-31 14:08:09,commit_summary,case_19,,"--- a/file.py
+++ b/file.py
- list()
+ set()",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- list()
+ set()",0.0,TinyLlama,,0.205
style: update greeting,2025-08-31 14:08:09,commit_summary,case_20,,"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.0,TinyLlama,,0.14
refactor: switch result container,2025-08-31 14:08:09,commit_summary,case_21,,"--- a/file.py
+++ b/file.py
- result = []
+ result = {}",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- result = []
+ result = {}",0.0,TinyLlama,,0.212
docs: add status response,2025-08-31 14:08:09,commit_summary,case_22,,"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.0,TinyLlama,,0.151
perf: optimize data structure,2025-08-31 14:08:09,commit_summary,case_23,,"--- a/file.py
+++ b/file.py
- list()
+ set()",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- list()
+ set()",0.0,TinyLlama,,0.181
refactor: optimize data structure,2025-08-31 14:08:09,commit_summary,case_24,,"--- a/file.py
+++ b/file.py
- list()
+ set()",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- list()
+ set()",0.0,TinyLlama,,0.189
docs: add status response,2025-08-31 14:08:09,commit_summary,case_25,,"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.0,TinyLlama,,0.151
style: add status response,2025-08-31 14:08:09,commit_summary,case_26,,"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.0,TinyLlama,,0.162
refactor: add status response,2025-08-31 14:08:09,commit_summary,case_27,,"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.0,TinyLlama,,0.148
refactor: update greeting,2025-08-31 14:08:09,commit_summary,case_28,,"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.0,TinyLlama,,0.115
refactor: clean data before returning,2025-08-31 14:08:09,commit_summary,case_29,,"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.0,TinyLlama,,0.171
chore: add status response,2025-08-31 14:08:09,commit_summary,case_30,,"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.0,TinyLlama,,0.15
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [3, 4], ""Eliminate"": [1, 2, 5]}",2025-08-31 14:08:09,eisenhower,case_1,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 1}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 1, ""urgency"": 1}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 1}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 1, ""urgency"": 1}]",0.0,TinyLlama,0.5,
"{""Do First"": [], ""Schedule"": [1], ""Delegate"": [2, 3], ""Eliminate"": []}",2025-08-31 14:08:09,eisenhower,case_2,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 1}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 1}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]",0.0,TinyLlama,0.5,
"{""Do First"": [1], ""Schedule"": [2], ""Delegate"": [3, 5], ""Eliminate"": [4]}",2025-08-31 14:08:09,eisenhower,case_3,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 3, ""urgency"": 5}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 3, ""urgency"": 5}]",0.0,TinyLlama,0.0,
"{""Do First"": [1, 3], ""Schedule"": [], ""Delegate"": [], ""Eliminate"": [2]}",2025-08-31 14:08:09,eisenhower,case_4,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 4}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 4}]",0.0,TinyLlama,0.5,
"{""Do First"": [], ""Schedule"": [3, 5], ""Delegate"": [1, 4], ""Eliminate"": [2]}",2025-08-31 14:08:09,eisenhower,case_5,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 3}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 3}]",0.0,TinyLlama,0.25,
"{""Do First"": [2], ""Schedule"": [1], ""Delegate"": [3], ""Eliminate"": [4]}",2025-08-31 14:08:09,eisenhower,case_6,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}]",0.0,TinyLlama,0.0,
"{""Do First"": [1], ""Schedule"": [], ""Delegate"": [3], ""Eliminate"": [2, 4]}",2025-08-31 14:08:09,eisenhower,case_7,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 2}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 2}]",0.0,TinyLlama,0.25,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [2], ""Eliminate"": [1, 3]}",2025-08-31 14:08:09,eisenhower,case_8,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 1}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 1}]",0.0,TinyLlama,0.5,
"{""Do First"": [2], ""Schedule"": [3], ""Delegate"": [1], ""Eliminate"": []}",2025-08-31 14:08:09,eisenhower,case_9,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 3}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 3}]",0.0,TinyLlama,0.25,
"{""Do First"": [1], ""Schedule"": [2, 3], ""Delegate"": [], ""Eliminate"": []}",2025-08-31 14:08:09,eisenhower,case_10,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 1}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 1}]",0.0,TinyLlama,0.5,
"{""Do First"": [5], ""Schedule"": [], ""Delegate"": [2, 3], ""Eliminate"": [1, 4]}",2025-08-31 14:08:09,eisenhower,case_11,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 5}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 5}]",0.0,TinyLlama,0.25,
"{""Do First"": [2], ""Schedule"": [], ""Delegate"": [1, 3], ""Eliminate"": []}",2025-08-31 14:08:09,eisenhower,case_12,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 4}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 4}]",0.0,TinyLlama,0.5,
"{""Do First"": [], ""Schedule"": [4, 5], ""Delegate"": [1], ""Eliminate"": [2, 3]}",2025-08-31 14:08:09,eisenhower,case_13,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 5, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 4, ""urgency"": 1}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 5, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 4, ""urgency"": 1}]",0.0,TinyLlama,0.25,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [1, 4], ""Eliminate"": [2, 3]}",2025-08-31 14:08:09,eisenhower,case_14,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 5}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 5}]",0.0,TinyLlama,0.5,
"{""Do First"": [], ""Schedule"": [1], ""Delegate"": [3], ""Eliminate"": [2]}",2025-08-31 14:08:09,eisenhower,case_15,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]",0.0,TinyLlama,0.25,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [1, 2, 3], ""Eliminate"": []}",2025-08-31 14:08:09,eisenhower,case_16,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}]",0.0,TinyLlama,0.75,
"{""Do First"": [], ""Schedule"": [2, 3], ""Delegate"": [1], ""Eliminate"": [4]}",2025-08-31 14:08:09,eisenhower,case_17,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 1}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 1}]",0.0,TinyLlama,0.25,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [], ""Eliminate"": [1, 2, 3]}",2025-08-31 14:08:09,eisenhower,case_18,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 3}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 3}]",0.0,TinyLlama,0.75,
"{""Do First"": [4], ""Schedule"": [1, 3], ""Delegate"": [], ""Eliminate"": [2]}",2025-08-31 14:08:09,eisenhower,case_19,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 4, ""urgency"": 5}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 4, ""urgency"": 5}]",0.0,TinyLlama,0.25,
"{""Do First"": [], ""Schedule"": [1], ""Delegate"": [4], ""Eliminate"": [2, 3]}",2025-08-31 14:08:09,eisenhower,case_20,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 5}]",,"[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 5}]",0.0,TinyLlama,0.25,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_1,,"team={""Member1"": {""available_hours"": 23}, ""Member2"": {""available_hours"": 22}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 19}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": []}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 23}, ""Member2"": {""available_hours"": 22}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 19}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": []}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_2,,"team={""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 15}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 18}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": [2, 3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 10, ""dependencies"": [5]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 15}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 18}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": [2, 3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 10, ""dependencies"": [5]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_3,,"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 21}, ""Member4"": {""available_hours"": 21}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [2, 3]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 7, ""dependencies"": [4]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 21}, ""Member4"": {""available_hours"": 21}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [2, 3]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 7, ""dependencies"": [4]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_4,,"team={""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 21}, ""Member4"": {""available_hours"": 10}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 5, ""dependencies"": [5, 4]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 21}, ""Member4"": {""available_hours"": 10}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 5, ""dependencies"": [5, 4]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_5,,"team={""Member1"": {""available_hours"": 25}, ""Member2"": {""available_hours"": 23}, ""Member3"": {""available_hours"": 20}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": [1]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 25}, ""Member2"": {""available_hours"": 23}, ""Member3"": {""available_hours"": 20}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": [1]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_6,,"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 4, ""dependencies"": [2]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 4, ""dependencies"": [2]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_7,,"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 25}, ""Member4"": {""available_hours"": 22}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 9, ""dependencies"": []}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 25}, ""Member4"": {""available_hours"": 22}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 9, ""dependencies"": []}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_8,,"team={""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 17}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 24}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [1, 4]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 6, ""dependencies"": [4]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 17}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 24}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [1, 4]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 6, ""dependencies"": [4]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_9,,"team={""Member1"": {""available_hours"": 10}, ""Member2"": {""available_hours"": 11}, ""Member3"": {""available_hours"": 12}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 5, ""dependencies"": [1, 3]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 9, ""dependencies"": [1]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 10}, ""Member2"": {""available_hours"": 11}, ""Member3"": {""available_hours"": 12}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 5, ""dependencies"": [1, 3]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 9, ""dependencies"": [1]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_10,,"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 14}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 10, ""dependencies"": [1]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 14}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 10, ""dependencies"": [1]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_11,,"team={""Member1"": {""available_hours"": 20}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 25}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": []}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 20}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 25}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": []}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_12,,"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 14}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 5, ""dependencies"": [1, 2]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 14}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 5, ""dependencies"": [1, 2]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_13,,"team={""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 21}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 6, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [1]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 21}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 6, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [1]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_14,,"team={""Member1"": {""available_hours"": 11}, ""Member2"": {""available_hours"": 18}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": [2, 1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": [2, 3]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 11}, ""Member2"": {""available_hours"": 18}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": [2, 1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": [2, 3]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_15,,"team={""Member1"": {""available_hours"": 12}, ""Member2"": {""available_hours"": 12}, ""Member3"": {""available_hours"": 17}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 4, ""dependencies"": [3, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": [5]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 12}, ""Member2"": {""available_hours"": 12}, ""Member3"": {""available_hours"": 17}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 4, ""dependencies"": [3, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": [5]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_16,,"team={""Member1"": {""available_hours"": 15}, ""Member2"": {""available_hours"": 17}, ""Member3"": {""available_hours"": 22}, ""Member4"": {""available_hours"": 18}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 6, ""dependencies"": [4, 2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 3, ""dependencies"": [4, 2]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 15}, ""Member2"": {""available_hours"": 17}, ""Member3"": {""available_hours"": 22}, ""Member4"": {""available_hours"": 18}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 6, ""dependencies"": [4, 2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 3, ""dependencies"": [4, 2]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_17,,"team={""Member1"": {""available_hours"": 13}, ""Member2"": {""available_hours"": 21}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 16}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": []}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 13}, ""Member2"": {""available_hours"": 21}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 16}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": []}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_18,,"team={""Member1"": {""available_hours"": 24}, ""Member2"": {""available_hours"": 15}, ""Member3"": {""available_hours"": 15}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [3]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 24}, ""Member2"": {""available_hours"": 15}, ""Member3"": {""available_hours"": 15}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [3]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_19,,"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 10}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [2]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 10}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [2]}]
",0.0,TinyLlama,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_20,,"team={""Member1"": {""available_hours"": 23}, ""Member2"": {""available_hours"": 19}, ""Member3"": {""available_hours"": 14}, ""Member4"": {""available_hours"": 14}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": [2, 1]}]",1,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 23}, ""Member2"": {""available_hours"": 19}, ""Member3"": {""available_hours"": 14}, ""Member4"": {""available_hours"": 14}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": [2, 1]}]
",0.0,TinyLlama,,
perf: secure password check,2025-08-31 14:08:09,commit_summary,case_1,,"--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",0.0,Deepseek,,0.19
fix: change logging level,2025-08-31 14:08:09,commit_summary,case_2,,"--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)",0.0,Deepseek,,0.178
docs: disable debug mode,2025-08-31 14:08:09,commit_summary,case_3,,"--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",0.0,Deepseek,,0.22
style: clean data before returning,2025-08-31 14:08:09,commit_summary,case_4,,"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.0,Deepseek,,0.133
test: clean data before returning,2025-08-31 14:08:09,commit_summary,case_5,,"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.0,Deepseek,,0.144
perf: update greeting,2025-08-31 14:08:09,commit_summary,case_6,,"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.0,Deepseek,,0.144
refactor: secure password check,2025-08-31 14:08:09,commit_summary,case_7,,"--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",0.0,Deepseek,,0.176
perf: improve formatting,2025-08-31 14:08:09,commit_summary,case_8,,"--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",0.0,Deepseek,,0.14
style: switch result container,2025-08-31 14:08:09,commit_summary,case_9,,"--- a/file.py
+++ b/file.py
- result = []
+ result = {}",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- result = []
+ result = {}",0.0,Deepseek,,0.169
fix: update greeting,2025-08-31 14:08:09,commit_summary,case_10,,"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.0,Deepseek,,0.078
docs: clean data before returning,2025-08-31 14:08:09,commit_summary,case_11,,"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.0,Deepseek,,0.144
style: switch result container,2025-08-31 14:08:09,commit_summary,case_12,,"--- a/file.py
+++ b/file.py
- result = []
+ result = {}",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- result = []
+ result = {}",0.0,Deepseek,,0.169
perf: secure password check,2025-08-31 14:08:09,commit_summary,case_13,,"--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",0.0,Deepseek,,0.19
fix: update greeting,2025-08-31 14:08:09,commit_summary,case_14,,"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.0,Deepseek,,0.078
perf: improve formatting,2025-08-31 14:08:09,commit_summary,case_15,,"--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",0.0,Deepseek,,0.14
refactor: clean data before returning,2025-08-31 14:08:09,commit_summary,case_16,,"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.0,Deepseek,,0.162
refactor: improve formatting,2025-08-31 14:08:09,commit_summary,case_17,,"--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",0.0,Deepseek,,0.125
fix: disable debug mode,2025-08-31 14:08:09,commit_summary,case_18,,"--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",0.0,Deepseek,,0.151
style: optimize data structure,2025-08-31 14:08:09,commit_summary,case_19,,"--- a/file.py
+++ b/file.py
- list()
+ set()",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- list()
+ set()",0.0,Deepseek,,0.192
style: update greeting,2025-08-31 14:08:09,commit_summary,case_20,,"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.0,Deepseek,,0.132
refactor: switch result container,2025-08-31 14:08:09,commit_summary,case_21,,"--- a/file.py
+++ b/file.py
- result = []
+ result = {}",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- result = []
+ result = {}",0.0,Deepseek,,0.199
docs: add status response,2025-08-31 14:08:09,commit_summary,case_22,,"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.0,Deepseek,,0.175
perf: optimize data structure,2025-08-31 14:08:09,commit_summary,case_23,,"--- a/file.py
+++ b/file.py
- list()
+ set()",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- list()
+ set()",0.0,Deepseek,,0.205
refactor: optimize data structure,2025-08-31 14:08:09,commit_summary,case_24,,"--- a/file.py
+++ b/file.py
- list()
+ set()",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- list()
+ set()",0.0,Deepseek,,0.176
docs: add status response,2025-08-31 14:08:09,commit_summary,case_25,,"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.0,Deepseek,,0.175
style: add status response,2025-08-31 14:08:09,commit_summary,case_26,,"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.0,Deepseek,,0.174
refactor: add status response,2025-08-31 14:08:09,commit_summary,case_27,,"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.0,Deepseek,,0.16
refactor: update greeting,2025-08-31 14:08:09,commit_summary,case_28,,"--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",0.0,Deepseek,,0.108
refactor: clean data before returning,2025-08-31 14:08:09,commit_summary,case_29,,"--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",0.0,Deepseek,,0.162
chore: add status response,2025-08-31 14:08:09,commit_summary,case_30,,"--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",,"[Deepseek R1 8b STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",0.0,Deepseek,,0.163
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [3, 4], ""Eliminate"": [1, 2, 5]}",2025-08-31 14:08:09,eisenhower,case_1,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 1}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 1, ""urgency"": 1}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 1}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 1, ""urgency"": 1}]",0.0,Deepseek,0.5,
"{""Do First"": [], ""Schedule"": [1], ""Delegate"": [2, 3], ""Eliminate"": []}",2025-08-31 14:08:09,eisenhower,case_2,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 1}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 1}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]",0.0,Deepseek,0.5,
"{""Do First"": [1], ""Schedule"": [2], ""Delegate"": [3, 5], ""Eliminate"": [4]}",2025-08-31 14:08:09,eisenhower,case_3,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 3, ""urgency"": 5}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 3, ""urgency"": 5}]",0.0,Deepseek,0.0,
"{""Do First"": [1, 3], ""Schedule"": [], ""Delegate"": [], ""Eliminate"": [2]}",2025-08-31 14:08:09,eisenhower,case_4,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 4}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 4}]",0.0,Deepseek,0.5,
"{""Do First"": [], ""Schedule"": [3, 5], ""Delegate"": [1, 4], ""Eliminate"": [2]}",2025-08-31 14:08:09,eisenhower,case_5,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 3}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 3}]",0.0,Deepseek,0.25,
"{""Do First"": [2], ""Schedule"": [1], ""Delegate"": [3], ""Eliminate"": [4]}",2025-08-31 14:08:09,eisenhower,case_6,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}]",0.0,Deepseek,0.0,
"{""Do First"": [1], ""Schedule"": [], ""Delegate"": [3], ""Eliminate"": [2, 4]}",2025-08-31 14:08:09,eisenhower,case_7,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 2}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 2}]",0.0,Deepseek,0.25,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [2], ""Eliminate"": [1, 3]}",2025-08-31 14:08:09,eisenhower,case_8,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 1}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 1}]",0.0,Deepseek,0.5,
"{""Do First"": [2], ""Schedule"": [3], ""Delegate"": [1], ""Eliminate"": []}",2025-08-31 14:08:09,eisenhower,case_9,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 3}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 3}]",0.0,Deepseek,0.25,
"{""Do First"": [1], ""Schedule"": [2, 3], ""Delegate"": [], ""Eliminate"": []}",2025-08-31 14:08:09,eisenhower,case_10,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 1}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 1}]",0.0,Deepseek,0.5,
"{""Do First"": [5], ""Schedule"": [], ""Delegate"": [2, 3], ""Eliminate"": [1, 4]}",2025-08-31 14:08:09,eisenhower,case_11,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 5}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 5}]",0.0,Deepseek,0.25,
"{""Do First"": [2], ""Schedule"": [], ""Delegate"": [1, 3], ""Eliminate"": []}",2025-08-31 14:08:09,eisenhower,case_12,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 4}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 4}]",0.0,Deepseek,0.5,
"{""Do First"": [], ""Schedule"": [4, 5], ""Delegate"": [1], ""Eliminate"": [2, 3]}",2025-08-31 14:08:09,eisenhower,case_13,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 5, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 4, ""urgency"": 1}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 5, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 4, ""urgency"": 1}]",0.0,Deepseek,0.25,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [1, 4], ""Eliminate"": [2, 3]}",2025-08-31 14:08:09,eisenhower,case_14,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 5}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 5}]",0.0,Deepseek,0.5,
"{""Do First"": [], ""Schedule"": [1], ""Delegate"": [3], ""Eliminate"": [2]}",2025-08-31 14:08:09,eisenhower,case_15,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]",0.0,Deepseek,0.25,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [1, 2, 3], ""Eliminate"": []}",2025-08-31 14:08:09,eisenhower,case_16,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}]",0.0,Deepseek,0.75,
"{""Do First"": [], ""Schedule"": [2, 3], ""Delegate"": [1], ""Eliminate"": [4]}",2025-08-31 14:08:09,eisenhower,case_17,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 1}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 1}]",0.0,Deepseek,0.25,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [], ""Eliminate"": [1, 2, 3]}",2025-08-31 14:08:09,eisenhower,case_18,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 3}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 3}]",0.0,Deepseek,0.75,
"{""Do First"": [4], ""Schedule"": [1, 3], ""Delegate"": [], ""Eliminate"": [2]}",2025-08-31 14:08:09,eisenhower,case_19,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 4, ""urgency"": 5}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 4, ""urgency"": 5}]",0.0,Deepseek,0.25,
"{""Do First"": [], ""Schedule"": [1], ""Delegate"": [4], ""Eliminate"": [2, 3]}",2025-08-31 14:08:09,eisenhower,case_20,0.0,"[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 5}]",,"[Deepseek R1 8b STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format:
[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 5}]",0.0,Deepseek,0.25,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_1,,"team={""Member1"": {""available_hours"": 23}, ""Member2"": {""available_hours"": 22}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 19}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": []}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 23}, ""Member2"": {""available_hours"": 22}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 19}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": []}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_2,,"team={""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 15}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 18}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": [2, 3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 10, ""dependencies"": [5]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 15}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 18}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": [2, 3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 10, ""dependencies"": [5]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_3,,"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 21}, ""Member4"": {""available_hours"": 21}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [2, 3]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 7, ""dependencies"": [4]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 21}, ""Member4"": {""available_hours"": 21}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [2, 3]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 7, ""dependencies"": [4]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_4,,"team={""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 21}, ""Member4"": {""available_hours"": 10}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 5, ""dependencies"": [5, 4]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 21}, ""Member4"": {""available_hours"": 10}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 5, ""dependencies"": [5, 4]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_5,,"team={""Member1"": {""available_hours"": 25}, ""Member2"": {""available_hours"": 23}, ""Member3"": {""available_hours"": 20}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": [1]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 25}, ""Member2"": {""available_hours"": 23}, ""Member3"": {""available_hours"": 20}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": [1]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_6,,"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 4, ""dependencies"": [2]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 4, ""dependencies"": [2]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_7,,"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 25}, ""Member4"": {""available_hours"": 22}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 9, ""dependencies"": []}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 25}, ""Member4"": {""available_hours"": 22}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 9, ""dependencies"": []}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_8,,"team={""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 17}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 24}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [1, 4]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 6, ""dependencies"": [4]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 17}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 24}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [1, 4]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 6, ""dependencies"": [4]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_9,,"team={""Member1"": {""available_hours"": 10}, ""Member2"": {""available_hours"": 11}, ""Member3"": {""available_hours"": 12}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 5, ""dependencies"": [1, 3]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 9, ""dependencies"": [1]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 10}, ""Member2"": {""available_hours"": 11}, ""Member3"": {""available_hours"": 12}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 5, ""dependencies"": [1, 3]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 9, ""dependencies"": [1]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_10,,"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 14}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 10, ""dependencies"": [1]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 14}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 10, ""dependencies"": [1]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_11,,"team={""Member1"": {""available_hours"": 20}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 25}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": []}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 20}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 25}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": []}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_12,,"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 14}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 5, ""dependencies"": [1, 2]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 14}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 5, ""dependencies"": [1, 2]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_13,,"team={""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 21}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 6, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [1]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 21}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 6, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [1]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_14,,"team={""Member1"": {""available_hours"": 11}, ""Member2"": {""available_hours"": 18}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": [2, 1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": [2, 3]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 11}, ""Member2"": {""available_hours"": 18}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": [2, 1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 6, ""dependencies"": [2, 3]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_15,,"team={""Member1"": {""available_hours"": 12}, ""Member2"": {""available_hours"": 12}, ""Member3"": {""available_hours"": 17}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 4, ""dependencies"": [3, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": [5]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 12}, ""Member2"": {""available_hours"": 12}, ""Member3"": {""available_hours"": 17}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 4, ""dependencies"": [3, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": [5]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_16,,"team={""Member1"": {""available_hours"": 15}, ""Member2"": {""available_hours"": 17}, ""Member3"": {""available_hours"": 22}, ""Member4"": {""available_hours"": 18}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 6, ""dependencies"": [4, 2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 3, ""dependencies"": [4, 2]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 15}, ""Member2"": {""available_hours"": 17}, ""Member3"": {""available_hours"": 22}, ""Member4"": {""available_hours"": 18}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 6, ""dependencies"": [4, 2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 3, ""dependencies"": [4, 2]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_17,,"team={""Member1"": {""available_hours"": 13}, ""Member2"": {""available_hours"": 21}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 16}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": []}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 13}, ""Member2"": {""available_hours"": 21}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 16}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 4, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": []}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_18,,"team={""Member1"": {""available_hours"": 24}, ""Member2"": {""available_hours"": 15}, ""Member3"": {""available_hours"": 15}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [3]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 24}, ""Member2"": {""available_hours"": 15}, ""Member3"": {""available_hours"": 15}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": [3]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_19,,"team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 10}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [2]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 10}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [2]}]
",0.0,Deepseek,,
Valid sprint plan respecting constraints,2025-08-31 14:08:09,sprint_planning,case_20,,"team={""Member1"": {""available_hours"": 23}, ""Member2"": {""available_hours"": 19}, ""Member3"": {""available_hours"": 14}, ""Member4"": {""available_hours"": 14}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": [2, 1]}]",1,"[Deepseek R1 8b STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 23}, ""Member2"": {""available_hours"": 19}, ""Member3"": {""available_hours"": 14}, ""Member4"": {""available_hours"": 14}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": [2, 1]}]
",0.0,Deepseek,,
