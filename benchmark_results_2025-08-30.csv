expected,output,input,task,accuracy,valid_plan,similarity
docs: change logging level,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)","--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)",commit_summary,,,0.176
style: disable debug mode,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- debug: true
+ debug: false","--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",commit_summary,,,0.209
refactor: change logging level,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)","--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)",commit_summary,,,0.218
perf: add status response,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}","--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",commit_summary,,,0.151
perf: update greeting,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')","--- a/file.py
+++ b/file.py
- print('hello')
+ print('hello world')",commit_summary,,,0.106
feat: add basic test,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- # no tests yet
+ def test_status(): assert True","--- a/file.py
+++ b/file.py
- # no tests yet
+ def test_status(): assert True",commit_summary,,,0.145
perf: improve formatting,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return a+b
+ return a + b","--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",commit_summary,,,0.137
test: disable debug mode,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- debug: true
+ debug: false","--- a/file.py
+++ b/file.py
- debug: true
+ debug: false",commit_summary,,,0.247
perf: add status response,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}","--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",commit_summary,,,0.151
refactor: clean data before returning,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())","--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",commit_summary,,,0.171
perf: add status response,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}","--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",commit_summary,,,0.151
chore: optimize data structure,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- list()
+ set()","--- a/file.py
+++ b/file.py
- list()
+ set()",commit_summary,,,0.192
docs: secure password check,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]","--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",commit_summary,,,0.169
feat: secure password check,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]","--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",commit_summary,,,0.169
chore: add basic test,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- # no tests yet
+ def test_status(): assert True","--- a/file.py
+++ b/file.py
- # no tests yet
+ def test_status(): assert True",commit_summary,,,0.167
style: clean data before returning,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())","--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",commit_summary,,,0.141
chore: improve formatting,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return a+b
+ return a + b","--- a/file.py
+++ b/file.py
- return a+b
+ return a + b",commit_summary,,,0.136
feat: add status response,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}","--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",commit_summary,,,0.151
refactor: add status response,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}","--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",commit_summary,,,0.148
feat: secure password check,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]","--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",commit_summary,,,0.169
refactor: change logging level,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)","--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)",commit_summary,,,0.218
feat: optimize data structure,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- list()
+ set()","--- a/file.py
+++ b/file.py
- list()
+ set()",commit_summary,,,0.168
chore: optimize data structure,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- list()
+ set()","--- a/file.py
+++ b/file.py
- list()
+ set()",commit_summary,,,0.192
style: add status response,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}","--- a/file.py
+++ b/file.py
- return {}
+ return {""status"": ""ok""}",commit_summary,,,0.162
fix: secure password check,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]","--- a/file.py
+++ b/file.py
- pwd == db[user]
+ hash(pwd) == db[user]",commit_summary,,,0.169
style: switch result container,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- result = []
+ result = {}","--- a/file.py
+++ b/file.py
- result = []
+ result = {}",commit_summary,,,0.18
docs: switch result container,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- result = []
+ result = {}","--- a/file.py
+++ b/file.py
- result = []
+ result = {}",commit_summary,,,0.181
perf: change logging level,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)","--- a/file.py
+++ b/file.py
- logger.debug(x)
+ logger.info(x)",commit_summary,,,0.212
style: clean data before returning,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())","--- a/file.py
+++ b/file.py
- data = fetch()
+ data = clean(fetch())",commit_summary,,,0.141
perf: optimize data structure,"[LLM STUB RESPONSE] Summarize the following code changes as a git commit message:
--- a/file.py
+++ b/file.py
- list()
+ set()","--- a/file.py
+++ b/file.py
- list()
+ set()",commit_summary,,,0.181
"{""Do First"": [3, 4], ""Schedule"": [5], ""Delegate"": [], ""Eliminate"": [1, 2]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 5, ""urgency"": 5}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 2}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 5, ""urgency"": 5}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 2}]",eisenhower,0,,
"{""Do First"": [], ""Schedule"": [2], ""Delegate"": [1, 3, 4], ""Eliminate"": [5]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 2, ""urgency"": 1}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 4}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 2, ""urgency"": 1}]",eisenhower,0,,
"{""Do First"": [5], ""Schedule"": [4], ""Delegate"": [3], ""Eliminate"": [1, 2]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 5, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 4, ""urgency"": 4}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 5, ""urgency"": 2}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 4, ""urgency"": 4}]",eisenhower,0,,
"{""Do First"": [], ""Schedule"": [1, 2], ""Delegate"": [], ""Eliminate"": [3, 4]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 3}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 3}]",eisenhower,0,,
"{""Do First"": [], ""Schedule"": [1], ""Delegate"": [2, 4], ""Eliminate"": [3]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 4, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 4}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 4, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 4}]",eisenhower,0,,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [1, 2, 3], ""Eliminate"": []}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 4}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 5}]",eisenhower,0,,
"{""Do First"": [1], ""Schedule"": [], ""Delegate"": [2], ""Eliminate"": [3]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 4, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 1}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 4, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 1}]",eisenhower,0,,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [1], ""Eliminate"": [2, 3]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 2}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 2, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 2}]",eisenhower,0,,
"{""Do First"": [], ""Schedule"": [2], ""Delegate"": [1, 3, 5], ""Eliminate"": [4]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 3}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 2, ""urgency"": 4}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 5, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 3}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 2, ""urgency"": 4}]",eisenhower,0,,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [], ""Eliminate"": [1, 2, 3, 4, 5]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 3}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 2, ""urgency"": 2}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 3}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 2, ""urgency"": 2}]",eisenhower,0,,
"{""Do First"": [], ""Schedule"": [3, 5], ""Delegate"": [], ""Eliminate"": [1, 2, 4]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 1}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 3}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 2}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 4, ""urgency"": 1}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 2, ""urgency"": 3}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 2}]",eisenhower,0,,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [1], ""Eliminate"": [2, 3]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 1}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 1}]",eisenhower,0,,
"{""Do First"": [], ""Schedule"": [4], ""Delegate"": [], ""Eliminate"": [1, 2, 3]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 5, ""urgency"": 1}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 1, ""urgency"": 3}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 5, ""urgency"": 1}]",eisenhower,0,,
"{""Do First"": [3], ""Schedule"": [5], ""Delegate"": [1], ""Eliminate"": [2, 4]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 1}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 5}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 1}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 5, ""urgency"": 1}]",eisenhower,0,,
"{""Do First"": [2], ""Schedule"": [4, 5], ""Delegate"": [], ""Eliminate"": [1, 3]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 4, ""urgency"": 3}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 4, ""urgency"": 1}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 4, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 4, ""urgency"": 3}, {""id"": 5, ""name"": ""Task 5"", ""importance"": 4, ""urgency"": 1}]",eisenhower,0,,
"{""Do First"": [1, 3], ""Schedule"": [], ""Delegate"": [], ""Eliminate"": [2]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 4, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 5}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 4, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 2}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 5}]",eisenhower,0,,
"{""Do First"": [], ""Schedule"": [1], ""Delegate"": [3], ""Eliminate"": [2, 4]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 2}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 5, ""urgency"": 3}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 3}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 3, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 3, ""urgency"": 2}]",eisenhower,0,,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [2], ""Eliminate"": [1, 3]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 3}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 2, ""urgency"": 2}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 1, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 3}]",eisenhower,0,,
"{""Do First"": [], ""Schedule"": [], ""Delegate"": [1, 3, 4], ""Eliminate"": [2]}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 4}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 3, ""urgency"": 5}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 1}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 2, ""urgency"": 4}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 1, ""urgency"": 4}]",eisenhower,0,,
"{""Do First"": [4], ""Schedule"": [3], ""Delegate"": [1, 2], ""Eliminate"": []}","[LLM STUB RESPONSE] Sort these tasks into an Eisenhower matrix (Do First, Schedule, Delegate, Eliminate) in JSON format: [{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 4, ""urgency"": 4}]","[{""id"": 1, ""name"": ""Task 1"", ""importance"": 1, ""urgency"": 4}, {""id"": 2, ""name"": ""Task 2"", ""importance"": 3, ""urgency"": 5}, {""id"": 3, ""name"": ""Task 3"", ""importance"": 5, ""urgency"": 2}, {""id"": 4, ""name"": ""Task 4"", ""importance"": 4, ""urgency"": 4}]",eisenhower,0,,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 21}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 9, ""dependencies"": []}]
","team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 21}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 10, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 9, ""dependencies"": []}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 18}, ""Member2"": {""available_hours"": 12}, ""Member3"": {""available_hours"": 11}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 7, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 5, ""dependencies"": [3]}]
","team={""Member1"": {""available_hours"": 18}, ""Member2"": {""available_hours"": 12}, ""Member3"": {""available_hours"": 11}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 7, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 5, ""dependencies"": [3]}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 25}, ""Member2"": {""available_hours"": 20}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 4, ""dependencies"": [1, 2]}]
","team={""Member1"": {""available_hours"": 25}, ""Member2"": {""available_hours"": 20}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 4, ""dependencies"": [1, 2]}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 13}, ""Member2"": {""available_hours"": 16}, ""Member3"": {""available_hours"": 15}, ""Member4"": {""available_hours"": 22}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [2, 3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [4, 2]}]
","team={""Member1"": {""available_hours"": 13}, ""Member2"": {""available_hours"": 16}, ""Member3"": {""available_hours"": 15}, ""Member4"": {""available_hours"": 22}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 5, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [2, 3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [4, 2]}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 21}, ""Member2"": {""available_hours"": 11}, ""Member3"": {""available_hours"": 22}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": [1]}]
","team={""Member1"": {""available_hours"": 21}, ""Member2"": {""available_hours"": 11}, ""Member3"": {""available_hours"": 22}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 6, ""dependencies"": [2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [3]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": [1]}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 20}, ""Member2"": {""available_hours"": 19}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 10, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": [2, 1]}]
","team={""Member1"": {""available_hours"": 20}, ""Member2"": {""available_hours"": 19}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 3, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 10, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": [2, 1]}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 10}, ""Member2"": {""available_hours"": 18}, ""Member3"": {""available_hours"": 22}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 3, ""dependencies"": [3, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 3, ""dependencies"": []}]
","team={""Member1"": {""available_hours"": 10}, ""Member2"": {""available_hours"": 18}, ""Member3"": {""available_hours"": 22}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 9, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 3, ""dependencies"": [3, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 3, ""dependencies"": []}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 20}, ""Member2"": {""available_hours"": 25}, ""Member3"": {""available_hours"": 25}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 10, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 3, ""dependencies"": [3]}]
","team={""Member1"": {""available_hours"": 20}, ""Member2"": {""available_hours"": 25}, ""Member3"": {""available_hours"": 25}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 10, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 3, ""dependencies"": [3]}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 15}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 7, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": []}]
","team={""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 15}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 7, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 6, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": []}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 15}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 19}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": []}]
","team={""Member1"": {""available_hours"": 15}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 19}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": [1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": []}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 17}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 7, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 10, ""dependencies"": [1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 5, ""dependencies"": []}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 7, ""dependencies"": [5]}]
","team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 17}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 7, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 10, ""dependencies"": [1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 5, ""dependencies"": []}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 7, ""dependencies"": [5]}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 11}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 4, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 4, ""dependencies"": [4]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 4, ""dependencies"": [4, 2]}]
","team={""Member1"": {""available_hours"": 14}, ""Member2"": {""available_hours"": 11}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 4, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 7, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 4, ""dependencies"": [4]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 4, ""dependencies"": [4, 2]}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 18}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 10, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": []}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 5, ""dependencies"": [2, 4]}]
","team={""Member1"": {""available_hours"": 19}, ""Member2"": {""available_hours"": 18}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 4, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 9, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": [2, 1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 10, ""dependencies"": [1, 2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 7, ""dependencies"": []}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 5, ""dependencies"": [2, 4]}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 16}, ""Member2"": {""available_hours"": 17}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": []}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 5, ""dependencies"": []}]
","team={""Member1"": {""available_hours"": 16}, ""Member2"": {""available_hours"": 17}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [1, 2]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 4, ""dependencies"": []}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": []}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 5, ""dependencies"": []}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 12}, ""Member2"": {""available_hours"": 18}, ""Member3"": {""available_hours"": 25}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1]}]
","team={""Member1"": {""available_hours"": 12}, ""Member2"": {""available_hours"": 18}, ""Member3"": {""available_hours"": 25}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": [1]}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 19}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 10, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 3, ""dependencies"": []}]
","team={""Member1"": {""available_hours"": 17}, ""Member2"": {""available_hours"": 24}, ""Member3"": {""available_hours"": 20}, ""Member4"": {""available_hours"": 19}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 10, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 3, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 3, ""dependencies"": []}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 20}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 13}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2, 1]}]
","team={""Member1"": {""available_hours"": 20}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 13}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 9, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 8, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [2, 1]}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 24}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 15}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 6, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 10, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": [2, 1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [2, 1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 5, ""dependencies"": []}]
","team={""Member1"": {""available_hours"": 24}, ""Member2"": {""available_hours"": 20}, ""Member3"": {""available_hours"": 15}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 6, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 10, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 5, ""dependencies"": [2, 1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 8, ""dependencies"": [2, 1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": [2]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 5, ""dependencies"": []}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 22}, ""Member2"": {""available_hours"": 18}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 10, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [2, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 4, ""dependencies"": [5, 2]}]
","team={""Member1"": {""available_hours"": 22}, ""Member2"": {""available_hours"": 18}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 8, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 10, ""dependencies"": []}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 8, ""dependencies"": [1]}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 8, ""dependencies"": [2, 1]}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 4, ""dependencies"": [5, 2]}]",sprint_planning,,0,
Valid sprint plan respecting constraints,"[LLM STUB RESPONSE] 
Plan a 2-week agile sprint for the following team and tasks. 
Constraints:
- Respect task dependencies
- Do not assign more hours than available
- Output JSON with format: {'sprint_backlog': [{'task_id': int, 'assignee': str, 'week': int}]}
Team: {""Member1"": {""available_hours"": 21}, ""Member2"": {""available_hours"": 12}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 21}}
Tasks: [{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 10, ""dependencies"": [2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": []}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": [5]}]
","team={""Member1"": {""available_hours"": 21}, ""Member2"": {""available_hours"": 12}, ""Member3"": {""available_hours"": 18}, ""Member4"": {""available_hours"": 21}}, tasks=[{""id"": 1, ""name"": ""Task 1"", ""estimate"": 3, ""dependencies"": []}, {""id"": 2, ""name"": ""Task 2"", ""estimate"": 5, ""dependencies"": [1]}, {""id"": 3, ""name"": ""Task 3"", ""estimate"": 7, ""dependencies"": []}, {""id"": 4, ""name"": ""Task 4"", ""estimate"": 10, ""dependencies"": [2]}, {""id"": 5, ""name"": ""Task 5"", ""estimate"": 10, ""dependencies"": []}, {""id"": 6, ""name"": ""Task 6"", ""estimate"": 8, ""dependencies"": [5]}]",sprint_planning,,0,
