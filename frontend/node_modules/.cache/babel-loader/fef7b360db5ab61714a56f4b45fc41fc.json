{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KnightNight101\\\\UoR_APP\\\\frontend\\\\src\\\\index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Entry point for React.js application\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n// MainPage component for displaying tasks and projects\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  tasks,\n  projects\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        right: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"System Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Other Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.name, \" - \", task.status, \" - \", task.assignee ? task.assignee : 'unassigned']\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: project.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n// Example usage of MainPage\n_c = MainPage;\nconst exampleTasks = [{\n  name: 'Subtask 1',\n  status: 'Pending',\n  assignee: null\n}, {\n  name: 'Subtask 2',\n  status: 'Completed',\n  assignee: 'Alice'\n}];\nconst exampleProjects = [{\n  name: 'Project A'\n}, {\n  name: 'Project B'\n}];\n\n// Only render CreateProject for debugging and feature validation\nfunction CreateProject() {\n  _s();\n  const [project, setProject] = useState({\n    name: '',\n    teamMembers: [],\n    deadline: '',\n    tasks: []\n  });\n  const [currentTask, setCurrentTask] = useState({\n    name: '',\n    status: 'Pending',\n    assignee: '',\n    subTasks: []\n  });\n  const handleAddTask = () => {\n    console.log('Adding task:', currentTask);\n    setProject({\n      ...project,\n      tasks: [...project.tasks, {\n        ...currentTask,\n        assignee: currentTask.assignee || null\n      }]\n    });\n    setCurrentTask({\n      name: '',\n      status: 'Pending',\n      assignee: '',\n      subTasks: []\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/create-project', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(project)\n    });\n    const data = await response.json();\n    alert(data.message);\n  };\n\n  // DEBUG: CreateProject form rendered\n  console.log('CreateProject form rendered');\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Project Name\",\n      value: project.name,\n      onChange: e => setProject({\n        ...project,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Team Member Name\",\n      onChange: e => {\n        const newMember = {\n          name: e.target.value,\n          role: ''\n        };\n        setProject(prev => {\n          const updatedMembers = [...prev.teamMembers, newMember];\n          // If this is the first member, set currentTask.assignee to their name\n          if (updatedMembers.length === 1) {\n            setCurrentTask(ct => ({\n              ...ct,\n              assignee: newMember.name\n            }));\n          }\n          return {\n            ...prev,\n            teamMembers: updatedMembers\n          };\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Team Member Role\",\n      onChange: e => {\n        const updatedMembers = [...project.teamMembers];\n        updatedMembers[updatedMembers.length - 1].role = e.target.value;\n        setProject({\n          ...project,\n          teamMembers: updatedMembers\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: project.deadline,\n      onChange: e => setProject({\n        ...project,\n        deadline: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Task Name\",\n      value: currentTask.name,\n      onChange: e => setCurrentTask({\n        ...currentTask,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Assignee (optional)\",\n      value: currentTask.assignee,\n      onChange: e => setCurrentTask({\n        ...currentTask,\n        assignee: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: project.tasks.map((task, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.name, \" - \", task.status, \" - \", task.assignee ? task.assignee : 'unassigned']\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n// ProjectDetails component for assigning/reassigning tasks and adding tasks/team members\n_s(CreateProject, \"ErnWlQpe7bC2YzMmJei55PB5GaI=\");\n_c2 = CreateProject;\nfunction ProjectDetails({\n  project\n}) {\n  _s2();\n  const [tasks, setTasks] = React.useState(project.tasks);\n  const [teamMembers, setTeamMembers] = React.useState(project.teamMembers);\n  const handleAssigneeChange = async (taskId, newAssignee) => {\n    const response = await fetch('/assign-task-to-member', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        projectId: project._id || project.id,\n        taskId,\n        assignee: newAssignee\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setTasks(tasks.map(task => task._id === taskId || task.id === taskId ? {\n        ...task,\n        assignee: newAssignee\n      } : task));\n    } else {\n      alert(data.message || 'Failed to update assignee');\n    }\n  };\n  const handleAddTask = () => {\n    const name = prompt('Enter task name:');\n    if (name) {\n      setTasks(prev => [...prev, {\n        name,\n        status: 'Pending',\n        assignee: '',\n        subTasks: []\n      }]);\n    }\n  };\n  const handleAddTeamMember = () => {\n    const name = prompt('Enter team member name:');\n    const role = prompt('Enter team member role:');\n    if (name) {\n      setTeamMembers(prev => [...prev, {\n        name,\n        role\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [project.name, \" - Project Page\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.name, \" - \", task.status, \" -\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: task.assignee || '',\n          onChange: e => handleAssigneeChange(task._id || task.id, e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"unassigned\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), teamMembers.map((member, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: member.name,\n            children: member.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, task._id || task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Team Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red',\n          fontWeight: 'bold'\n        },\n        children: \"DEBUG: ProjectDetails component is rendered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 1\n      }, this), console.log('DEBUG: ProjectDetails component is rendered'), teamMembers.map((member, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [member.name, \" - \", member.role]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddTeamMember,\n      children: \"Add Team Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n\n// Render ProjectDetails with a sample project for testing\n_s2(ProjectDetails, \"H1gCMQKjUGACIIJKEgJXDjsr2nI=\");\n_c3 = ProjectDetails;\nconst sampleProject = {\n  name: 'Sample Project',\n  teamMembers: [{\n    name: 'Alice',\n    role: 'Developer'\n  }],\n  tasks: [{\n    name: 'Initial Task',\n    status: 'Pending',\n    assignee: 'Alice',\n    subTasks: []\n  }]\n};\nReactDOM.render(/*#__PURE__*/_jsxDEV(ProjectDetails, {\n  project: sampleProject\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 227,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MainPage\");\n$RefreshReg$(_c2, \"CreateProject\");\n$RefreshReg$(_c3, \"ProjectDetails\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","MainPage","tasks","projects","children","style","position","top","right","fileName","_jsxFileName","lineNumber","columnNumber","map","task","index","name","status","assignee","project","_c","exampleTasks","exampleProjects","CreateProject","_s","setProject","teamMembers","deadline","currentTask","setCurrentTask","subTasks","handleAddTask","console","log","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","alert","message","onSubmit","type","placeholder","value","onChange","target","newMember","role","prev","updatedMembers","length","ct","onClick","idx","_c2","ProjectDetails","_s2","setTasks","setTeamMembers","handleAssigneeChange","taskId","newAssignee","projectId","_id","id","ok","prompt","handleAddTeamMember","member","color","fontWeight","_c3","sampleProject","render","document","getElementById","$RefreshReg$"],"sources":["C:/Users/KnightNight101/UoR_APP/frontend/src/index.js"],"sourcesContent":["// Entry point for React.js application\r\n\r\nimport React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// MainPage component for displaying tasks and projects\r\nfunction MainPage({ tasks, projects }) {\r\n  return (\r\n    <div>\r\n      {/* Top-right menu */}\r\n      <div style={{ position: 'absolute', top: 0, right: 0 }}>\r\n        <button>Login</button>\r\n        <button>System Settings</button>\r\n        <button>Other Features</button>\r\n      </div>\r\n\r\n      {/* Main content */}\r\n      <h1>Tasks</h1>\r\n      <ul>\r\n        {tasks.map((task, index) => (\r\n          <li key={index}>\r\n            {task.name} - {task.status} - {task.assignee ? task.assignee : 'unassigned'}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h1>Projects</h1>\r\n      <ul>\r\n        {projects.map((project, index) => (\r\n          <li key={index}>{project.name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Example usage of MainPage\r\nconst exampleTasks = [\r\n  { name: 'Subtask 1', status: 'Pending', assignee: null },\r\n  { name: 'Subtask 2', status: 'Completed', assignee: 'Alice' }\r\n];\r\n\r\nconst exampleProjects = [\r\n  { name: 'Project A' },\r\n  { name: 'Project B' }\r\n];\r\n\r\n// Only render CreateProject for debugging and feature validation\r\nfunction CreateProject() {\r\n  const [project, setProject] = useState({\r\n    name: '',\r\n    teamMembers: [],\r\n    deadline: '',\r\n    tasks: []\r\n  });\r\n\r\n  const [currentTask, setCurrentTask] = useState({ name: '', status: 'Pending', assignee: '', subTasks: [] });\r\n\r\n  const handleAddTask = () => {\r\n    console.log('Adding task:', currentTask);\r\n    setProject({ ...project, tasks: [...project.tasks, { ...currentTask, assignee: currentTask.assignee || null }] });\r\n    setCurrentTask({ name: '', status: 'Pending', assignee: '', subTasks: [] });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch('/create-project', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(project)\r\n    });\r\n    const data = await response.json();\r\n    alert(data.message);\r\n  };\r\n\r\n  // DEBUG: CreateProject form rendered\r\n  console.log('CreateProject form rendered');\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Project Name\"\r\n        value={project.name}\r\n        onChange={(e) => setProject({ ...project, name: e.target.value })}\r\n      />\r\n      {/* Inputs for team members */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Team Member Name\"\r\n        onChange={(e) => {\r\n          const newMember = { name: e.target.value, role: '' };\r\n          setProject(prev => {\r\n            const updatedMembers = [...prev.teamMembers, newMember];\r\n            // If this is the first member, set currentTask.assignee to their name\r\n            if (updatedMembers.length === 1) {\r\n              setCurrentTask(ct => ({ ...ct, assignee: newMember.name }));\r\n            }\r\n            return { ...prev, teamMembers: updatedMembers };\r\n          });\r\n        }}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Team Member Role\"\r\n        onChange={(e) => {\r\n          const updatedMembers = [...project.teamMembers];\r\n          updatedMembers[updatedMembers.length - 1].role = e.target.value;\r\n          setProject({ ...project, teamMembers: updatedMembers });\r\n        }}\r\n      />\r\n\r\n      {/* Input for deadline */}\r\n      <input\r\n        type=\"date\"\r\n        value={project.deadline}\r\n        onChange={(e) => setProject({ ...project, deadline: e.target.value })}\r\n      />\r\n\r\n      {/* Inputs for tasks and subtasks */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Task Name\"\r\n        value={currentTask.name}\r\n        onChange={(e) => setCurrentTask({ ...currentTask, name: e.target.value })}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Assignee (optional)\"\r\n        value={currentTask.assignee}\r\n        onChange={(e) => setCurrentTask({ ...currentTask, assignee: e.target.value })}\r\n      />\r\n      <button type=\"button\" onClick={handleAddTask}>Add Task</button>\r\n\r\n      {/* List current tasks */}\r\n      <ul>\r\n        {project.tasks.map((task, idx) => (\r\n          <li key={idx}>\r\n            {task.name} - {task.status} - {task.assignee ? task.assignee : 'unassigned'}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <button type=\"submit\">Create Project</button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// ProjectDetails component for assigning/reassigning tasks and adding tasks/team members\r\nfunction ProjectDetails({ project }) {\r\n  const [tasks, setTasks] = React.useState(project.tasks);\r\n  const [teamMembers, setTeamMembers] = React.useState(project.teamMembers);\r\n\r\n  const handleAssigneeChange = async (taskId, newAssignee) => {\r\n    const response = await fetch('/assign-task-to-member', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ projectId: project._id || project.id, taskId, assignee: newAssignee })\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      setTasks(tasks.map(task =>\r\n        (task._id === taskId || task.id === taskId)\r\n          ? { ...task, assignee: newAssignee }\r\n          : task\r\n      ));\r\n    } else {\r\n      alert(data.message || 'Failed to update assignee');\r\n    }\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    const name = prompt('Enter task name:');\r\n    if (name) {\r\n      setTasks(prev => [...prev, { name, status: 'Pending', assignee: '', subTasks: [] }]);\r\n    }\r\n  };\r\n\r\n  const handleAddTeamMember = () => {\r\n    const name = prompt('Enter team member name:');\r\n    const role = prompt('Enter team member role:');\r\n    if (name) {\r\n      setTeamMembers(prev => [...prev, { name, role }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{project.name} - Project Page</h2>\r\n      <h3>Tasks</h3>\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task._id || task.id}>\r\n            {task.name} - {task.status} - \r\n            <select\r\n              value={task.assignee || ''}\r\n              onChange={e => handleAssigneeChange(task._id || task.id, e.target.value)}\r\n            >\r\n              <option value=\"\">unassigned</option>\r\n              {teamMembers.map((member, idx) => (\r\n                <option key={idx} value={member.name}>{member.name}</option>\r\n              ))}\r\n            </select>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button type=\"button\" onClick={handleAddTask}>Add Task</button>\r\n      <h3>Team Members</h3>\r\n      <ul>\r\n<div style={{color: 'red', fontWeight: 'bold'}}>DEBUG: ProjectDetails component is rendered</div>\r\n      {console.log('DEBUG: ProjectDetails component is rendered')}\r\n        {teamMembers.map((member, idx) => (\r\n          <li key={idx}>{member.name} - {member.role}</li>\r\n        ))}\r\n      </ul>\r\n      <button type=\"button\" onClick={handleAddTeamMember}>Add Team Member</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Render ProjectDetails with a sample project for testing\r\nconst sampleProject = {\r\n  name: 'Sample Project',\r\n  teamMembers: [{ name: 'Alice', role: 'Developer' }],\r\n  tasks: [{ name: 'Initial Task', status: 'Pending', assignee: 'Alice', subTasks: [] }]\r\n};\r\nReactDOM.render(<ProjectDetails project={sampleProject} />, document.getElementById('root'));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}